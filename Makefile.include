# Main Options:
#   PLATFORM:      linux, mingw or html
#   FWK_MODE:      release or debug
#   FWK_DIR:       location of libfwk relative to parent Makefile (has to be defined)
#
#
# Exports:
#
# FWK_FLAGS:
# FWK_MAKE:        make command for libfwk
# FWK_LIB:         path to lib file
# TODO

ifndef FWK_DIR
($error ERROR: FWK_DIR undefined)
endif

ifndef MINGW_PREFIX
($error ERROR: MINGW_PREFIX undefined)
endif

PLATFORM     ?= linux
FWK_MODE     ?= release
FWK_LIB_FILE  = $(FWK_DIR)/lib/libfwk_$(PLATFORM)_$(MODE).a

# TODO:
FWK_MODEL_CONVERT=$(FWK_DIR)/tools/model_convert

LINUX_PKG_CONFIG=pkg-config
MINGW_PKG_CONFIG=$(MINGW_PREFIX)pkg-config

FWK_FLAGS_linux = -DFWK_TARGET_LINUX
FWK_FLAGS_mingw = -DFWK_TARGET_MINGW
FWK_FLAGS       = -std=c++2a $(FWK_FLAGS_$(PLATFORM))

FWK_LIBS_shared = freetype2 sdl2 libpng vorbisfile 
FWK_LIBS_linux  = $(shell $(LINUX_PKG_CONFIG) --libs $(FWK_LIBS_shared)) -lopenal -lGL -lGLU -lrt
FWK_LIBS_mingw  = $(shell $(MINGW_PKG_CONFIG) --libs $(FWK_LIBS_shared)) -lOpenAL32 -ldsound -lole32 -lwinmm \
				  -lglu32 -lopengl32 -lws2_32 -limagehlp
FWK_LIBS        = -L$(FWK_DIR)/lib -lfwk_$(PLATFORM)_$(FWK_MODE) $(FWK_LIBS_$(PLATFORM))
FWK_INCLUDES    = -I$(FWK_DIR)/include

#HTML5_FWK_FLAGS=-std=c++2a -DFWK_TARGET_HTML5 --memory-init-file 0 -O2 -I$(FWK_DIR)/src $(FWK_INCLUDES) \
				-s USE_SDL=2 -s USE_LIBPNG=1 -s USE_VORBIS=1

FWK_MAKE = $(MAKE) -C $(FWK_DIR) PLATFORM=$(PLATFORM) MODE=$(FWK_MODE)

$(FWK_LIB): .always_check
	$(FWK_MAKE) lib/libfwk_$(PLATFORM)_$(FWK_MODE).a
$(FWK_MODEL_CONVERT): .always_check
	$(FWK_MAKE) tools/model_convert

.always_check:

