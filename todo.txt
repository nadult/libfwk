- inRange(value, begin, end): value >= begin && value < end
- inv -> vinv
- porównania rationali można wykonać w takiej samej dokładności (RTCD: 457)
- remove int2, short2, etc and simply use templates ? check if it affects compilation performance
  remove unions? use x(), y(), z() instead of .x, .y, .z ?

-  make Triangle it modifiable? some other classes don't keep any invariants either?
   but on the other hand, we could add some checks for nans and infinities...
   add type: FiniteFloat (float which is not a nan and is not an infinity)

- konwersja kolor na bool (!= ColorId::transparent)
- fwk_assert powinno być ogólno dostępne, tak żeby wszędzie z tego korzystać
- DASSERTY często nie wystarczają; chcielibyśmy mieć dokładniesze informacje (jakie dane konkretnie są zepsute?)
- możliwość dodania suffixa do ścieżki FilePath (+em?)
- specjalizacje dla Maybe: niektóre typy mogą mieć zdefiniowane niepoprawne wartości
  które można używać zamiast boola!
- konwersja vector na bool (czy pusty)
- można robić struktury drzewiaste bazujące na wektorach!

- Promienie bazujące na intach mogą być zaprezentowane za pomocą segmentów; dzięki temu nie
  potrzebne są Rationale

- length_sq in ISegment ?
- fix problems with abs for all basic types (llint, qint, llint2, ...)
- consider dropping exceptions altogether (find alternatives for situations in which you're using them)
- isnan wszedzie, zeby nie marnowac czasu na glupie debugowanie...
- attach GDB on Ctrl-C
- make sure that there are no side-effects of running two main loops
- distanceSq -> quadrance ?
- Box<T, N> as other classes ?
- move SerializeAsPod to namespace detail
- make default serialize_as_pod be based on is_trivially_copyable / etc.
  or maybe not (pointers...)
- qint based on boost multiprecision is MUCH slower under mingw for some reason
- change order in FWK_ORDER_BY for vectors ?
- move box to fwk_box ?
- warning in Variant (type punning) on g++ mingw

- toString:
  - bool values[4]
  - pair<>
  - Ranges in general
  - to xml, to text, separator support for ranges ?
  - think it through

- cleanup colors (where ICOLOR, where FColor should be used); Conversion ColorId -> IColor
  FCOLOr sux (operations only on alpha part or only on color part)
- segment, box::empty -> degenerate ?
- isnan checks in all math classes (paranoid in vectors as well ?)
- copyable_ptr (unique_ptr but with copying ability (why the hell it doesn't have it?))
- profiler sux; fix it?
- same algorithms on top of dynamic or static structure: ImmutableGraph, MutableGraph share with shared interface ?
- remove math.h, etc from includes for ; On the other hand: they will end up in PCH anyway
- operator== for CRanges ?
- toString, fromString for enums ?

- ref(vector) returns vector<> with reference flag acts as a reference to a vector
  keeping ref(vector) in local context can be more efficient than keeping reference
- TaggedId<Type>: id for accessing vector<Type> ? generalize it somehow ?
- Tagged Value, Tagged Pair
- Tagged Type

- Add function for registering some information when assertion fails or exception is thrown or whatever
  like: ASSERT_INFO("While parsing file: %s", file_name.c_str());
- Improve assertions (they should give more information when breaking)...
  But how to do it properly?

- isEnum<>() -> isEnum<> (constexpr int)
- hash for custom types (like TaggedId<>)
- indexRange( size ), indexRange( range ) == indexRange( range.size() )
- box ranges...
- intersection -> intersect ?
- inset & enlarge na zewnątrz ?
- kolejność argumentów w EnableIfach
- no need to define data() and size() for ranges ?
- rethink parsing Rects & Boxes
  when parsing data, DASSERTS in constructor should be ASSERT (or add asserts in parsers)
- split fwk_math into several different files ?
- list all member which are treated specially by libfwk (tied, Scalar, vector_size, etc.)
- minimize use of asRay(), check all places
- fix isNormalized, areClose ?
- check if double constants are correct
- printing for Variant ?

- Mouse grabbing doesnt work
- SERIALIZE_AS_POD cathces fwk namespace
- model_viewer.exe displays models in different order (findFiles function must be working differently)

- better std::pair ?
- extendible xml:: toString fromString ?
- better tests for vector? Use tests from libc++ or something?
- rapidxml is allocating with std::new (exceptions aren't caught)
- Add some PASSERTs to fwk vector?
- Make custom string class (not a template)
- Variant uses operator new for non-POD types...
- dont use printf, make TextFormatter use xmlVersions, add formatRange(..) which adds, [], ();
  what about other goodies from printfs?
- max & min should accept multiple arguments and ranges
- separate vector allocator specialized with element size
  this allocator could also store some data before first element
- Add UnorderedVector and SortedVector classes
- klasa flat_storage<Type, space> która nie wymaga definicji typu, ale space musi być większy niż sizeof(Type)
  inaczej wywali się przy implementacji operator= i podobnych
- use size_type inside
- dodać irange do vector-a
- vector[-1] indeksuje od konca?
- shrink_to_fit dla vectora?
- makeRange z initializer_listy ?
- klasa do flag (bazująca na zwykłym enumie)

- Fix copyrights
- Rename InputEvent::***Event -> InputEvent::***
- support for multiple armatures in exporter; support for animation without armatures
- make AnimaedMesh similar to AnimatedModel
- add class VertexArraySpec and use it to verify drawcalls
- saving/loading Mesh colors to XML
- Separate model matrix from view matrix in MatrixStack?
- MemorySaver should increase it's size if necessary
- add StrongBaseType<> class
- additional isnan checks?
- add clang's small vector
- think about usefulness of const correctness; in some cases were just wasting time
- separate align function for fonts
- DEFINE_ENUM in class scope (it's not that easy...)
- Hide HAlign, VAlign inside fontstyle?
- removeIndicies should use materialset
- make makeUnique not use resize (use erase)
- setscissorrect should check if rect is empty or not

- more todos in the code
- Saver, Loader -> SaveStream, LoadStream or similar
- automatic operators: > >= <=
- normalize -> normalized

- __attribute__((cold)) on throwException (all code that leads to it
  should be inside cold section)
- clamp doesn't work properly when max < min

- Fix satTest (when edges from two objects are the same, you will get 0 normals)

- VSYNC under windows
- Fix problem in Cache when get_immutable_ptr() return null
- input key tab doesnt work
- use A-buffer for rendering transparent objects (will be useful for SSAO as well)

- Optimize kerning loop in font_factory.cpp
- Fix TODO in filesystem_linux (regarding links).
- In fact, just fix all TODOs
- Think about moving globla functions to classes / namespaces (especially functions in fwk_profile.h)
- Fix the namespace mess
- Bug: keyDown(InputKey::tab) doesn't work
- scanf's are very slow compared to strto*, maybe we should change printfs as well in text printer?

- Add HTML5 build target for pre-commit tests

- ModelNodes should be more flexible when creating (no need for empty root node, nodes with empty names should be ok, etc.)

- when printing strings to XML, library should check if restricted characters are not used by accident (&, <, >)
- separate XMLFormatter from TextFormatter

- Fix texture loaders so that they wont have to be inlined in texture.cpp
- Add tests for SimpleMesh operations

- Clang 3.6 Crashes when compiling frustum.cpp with -O2/-O3 and DNDEBUG


- tools/model_viewer crashes when wrong path is passed (for example folder instead of path to .model file)

- When LLDB is attached, make it catch all throws automatically

- Think about accuracy of different math functions. Some of tem could be easily improved

- Serialization of floats to XML isn't accurate; fix it
