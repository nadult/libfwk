name: test

on:
  push:
    branches:
      - '**'
  workflow_call:

jobs:
  test-windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        env:
            cache-name: cache-deps
        with:
            path: dependencies
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('tools/install_deps.py', 'dependencies.json') }}

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Install dependencies
        shell: cmd
        run: |
          python tools/install_deps.py download

      - name: Configure libfwk, tests & tools
        shell: cmd
        run: |
          tools/configure.py --build-type Release -DFWK_UNITY_BUILD=ON

      - name: Build libfwk, tests & tools
        shell: cmd
        run: |
          cmake --build build --parallel

      - name: Run tests
        shell: cmd
        run: |
          build\Debug\tests\stuff.exe
          build\Debug\tests\math.exe


  test-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install system dependencies
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt update
          sudo apt-get install libfreetype-dev libvorbis-dev libogg-dev libopenal-dev libdwarf-dev libelf-dev
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt update
          sudo apt install libvulkan-dev vulkan-headers

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        env:
            cache-name: cache-deps
        with:
            path: dependencies
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('tools/install_deps.py', 'dependencies.json') }}

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Build dependencies
        run: |
          python tools/install_deps.py build sdl shaderc-combined

      - name: Build libfwk
        run: |
          make -j8 lib

      - name: Build tests & tools
        run: |
          make -j8 tests tools

      - name: Run tests
        run: |
          tests/stuff
          tests/math


  check-formatting:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install Dependencies
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main'
          sudo apt update
          sudo apt install clang-format-17
          pip install black

      - name: Check C++ formatting
        run: |
          python tools/format.py -c

      - name: Check Python formatting
        if: '!cancelled()'
        run: |
          python -m black tools/* --check --color --diff -l 100
